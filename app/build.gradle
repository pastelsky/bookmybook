apply plugin: 'com.android.application'

android {
    compileSdkVersion 22
    buildToolsVersion "23.0.0rc1"

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE-FIREBASE.txt'
        exclude 'META-INF/NOTICE'
    }


    defaultConfig {
        applicationId "com.example.shubhamkanodia.bookmybook"
        minSdkVersion 14
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

apply plugin: 'com.parse'
apply plugin: 'android-apt'
def AAVersion = '3.3.1'

buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'https://maven.parse.com/repo'
        }
//        maven {
//
//            url "https://oss.sonatype.org/content/repositories/snapshots"
//        }

    }
    dependencies {
        classpath 'com.parse.tools:gradle:1.+'
        classpath 'com.android.tools.build:gradle:1.2.3'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
    }
}

parse {
    applicationId "0aUlwpoTCVRhQnmACWQ6SvmnE9huiT8HwJL6UMyG"
    masterKey "2tTNNMc5wUsxGQKkEnNdHGGWxme40A1gjfZg4ZU3"
    // This makes it automatic. Otherwise you would have to run e.g. gradlew parseUploadSymbolsRelease.
    uploadSymbols true
}

apt {
    arguments {
        androidManifestFile variant.outputs[0].processResources.manifestFile
        // if you have multiple outputs (when using splits), you may want to have other index than 0

        // You can set optional annotation processing options here, like these commented options:
        // logLevel 'INFO'
        // logFile '/var/log/aa.log'
    }
}

dependencies {
    compile ('com.google.android.gms:play-services-plus:7.5.0')
    compile ('com.google.android.gms:play-services-identity:7.5.0'){
        exclude module: 'support-v4' }
    compile ('com.parse.bolts:bolts-android:1.+')
    compile ('com.android.support:palette-v7:22.2.0'){
        exclude module: 'support-v4' }
    compile ('com.squareup.picasso:picasso:2.5.2')
    compile ('com.nhaarman.listviewanimations:lib-core:3.1.0@aar'){
        exclude module: 'support-v4' }
    compile 'com.firebase:firebase-client-android:2.2.4+'
    apt "org.androidannotations:androidannotations:$AAVersion"
    compile "org.androidannotations:androidannotations-api:$AAVersion"

    compile ('com.github.ksoichiro:android-observablescrollview:1.5.1')
    compile 'com.appyvet:materialrangebar:1.0'
//    compile 'com.quinny898.library.persistentsearch:library:1.0.0-SNAPSHOT'

    compile 'me.dm7.barcodescanner:zbar:1.7.2'
    compile 'com.sothree.slidinguppanel:library:3.0.0'

    compile 'com.mcxiaoke.volley:library:1.0.+'

    compile ('com.android.support:appcompat-v7:22.2.0') {
        exclude module: 'support-v4' }
    compile ('com.android.support:cardview-v7:22.2.0') {
        exclude module: 'support-v4' }
    compile ('com.android.support:design:22.2.0') {
        exclude module: 'support-v4' }
    compile ('com.android.support:support-v4:22.1.1')

    compile 'me.dm7.barcodescanner:zbar:1.7.1'
    compile 'com.ToxicBakery.viewpager.transforms:view-pager-transforms:1.2.32@aar'
    compile 'jp.wasabeef:picasso-transformations:1.0.3@aar'
    compile 'jp.co.cyberagent.android.gpuimage:gpuimage-library:1.2.3@aar'
    compile 'com.daimajia.easing:library:1.0.1@aar'
    compile 'com.daimajia.androidanimations:library:1.1.3@aar'

    compile project(':cognalys')
    compile fileTree(dir: 'libs', include: 'Parse-*.jar')
    compile fileTree(dir: 'libs', include: 'ParseCrashReporting-*.jar')
}
